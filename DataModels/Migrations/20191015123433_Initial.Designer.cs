// <auto-generated />
using System;
using DataModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DataModels.Migrations
{
    [DbContext(typeof(dnHomeDBContext))]
    [Migration("20191015123433_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DataModels.BoilerSample", b =>
                {
                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("BF")
                        .HasColumnType("boolean");

                    b.Property<bool>("CHPump")
                        .HasColumnType("boolean");

                    b.Property<short>("CurrentTemperature")
                        .HasColumnType("smallint");

                    b.Property<short>("DHW")
                        .HasColumnType("smallint");

                    b.Property<int>("Errors")
                        .HasColumnType("integer");

                    b.Property<bool>("FF")
                        .HasColumnType("boolean");

                    b.Property<short>("FFWorkTime")
                        .HasColumnType("smallint");

                    b.Property<short>("Fan")
                        .HasColumnType("smallint");

                    b.Property<short>("Flame")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("GreykoTimestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Heather")
                        .HasColumnType("boolean");

                    b.Property<int>("Mode")
                        .HasColumnType("integer");

                    b.Property<int>("Power")
                        .HasColumnType("integer");

                    b.Property<short>("SetTemperature")
                        .HasColumnType("smallint");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<bool>("ThermostatStop")
                        .HasColumnType("boolean");

                    b.HasKey("Timestamp");

                    b.ToTable("Boiler");
                });

            modelBuilder.Entity("DataModels.DHWSample", b =>
                {
                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.HasKey("Timestamp");

                    b.ToTable("DHW");
                });

            modelBuilder.Entity("DataModels.LatestBoilerSample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<bool>("BF")
                        .HasColumnType("boolean");

                    b.Property<bool>("CHPump")
                        .HasColumnType("boolean");

                    b.Property<short>("CurrentTemperature")
                        .HasColumnType("smallint");

                    b.Property<short>("DHW")
                        .HasColumnType("smallint");

                    b.Property<int>("Errors")
                        .HasColumnType("integer");

                    b.Property<bool>("FF")
                        .HasColumnType("boolean");

                    b.Property<short>("FFWorkTime")
                        .HasColumnType("smallint");

                    b.Property<short>("Fan")
                        .HasColumnType("smallint");

                    b.Property<short>("Flame")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("GreykoTimestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("Heather")
                        .HasColumnType("boolean");

                    b.Property<int>("Mode")
                        .HasColumnType("integer");

                    b.Property<int>("Power")
                        .HasColumnType("integer");

                    b.Property<short>("SetTemperature")
                        .HasColumnType("smallint");

                    b.Property<int>("State")
                        .HasColumnType("integer");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<bool>("ThermostatStop")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("LatestBoiler");
                });

            modelBuilder.Entity("DataModels.LatestDHWSample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<float>("Temperature")
                        .HasColumnType("real");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("LatestDHW");
                });

            modelBuilder.Entity("DataModels.LatestLuftdatenSample", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Humidity")
                        .HasColumnType("numeric");

                    b.Property<int>("PM_10")
                        .HasColumnType("integer");

                    b.Property<int>("PM_2_5")
                        .HasColumnType("integer");

                    b.Property<decimal>("Pressure")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Temperature")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("LatestLuftdaten");
                });

            modelBuilder.Entity("DataModels.LuftdatenSample", b =>
                {
                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("Humidity")
                        .HasColumnType("numeric");

                    b.Property<int>("PM_10")
                        .HasColumnType("integer");

                    b.Property<int>("PM_2_5")
                        .HasColumnType("integer");

                    b.Property<decimal>("Pressure")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Temperature")
                        .HasColumnType("numeric");

                    b.HasKey("Timestamp");

                    b.ToTable("LuftdatenStation");
                });
#pragma warning restore 612, 618
        }
    }
}
